# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# use this to control what branches get built.
# http://docs.shippable.com/ci/advancedOptions/branches/
branches:
  only:
    - master

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
    - DOCKER_REPO=node-build-push-docker-hub-deploy-kubernetes-kubectl
    - DOCKER_ACC=ttrahan # {account name}
    - PUSH_REGISTRY=repo.tsafe.io:18444

build:
  ci:
    # npm mirrors can sometimes be flacky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    - shippable_retry npm install
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - popd

  post_ci:
    - docker build -t $PUSH_REGISTRY/$DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER .
    - docker push $PUSH_REGISTRY/$DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER

# Integrations are used to connect external resources to CI
# http://docs.shippable.com/integrations/overview/
integrations:
# adding docker hub integration so that credentials are available to CI Job
# http://docs.shippable.com/integrations/imageRegistries/dockerHub/
  hub:
    - integrationName: tablesafe_push
      type: "private docker registry"

  # http://docs.shippable.com/ci/shippableyml/#notifications
  notifications:
    # turns off email for PR builds, notifies only on failure or change in status
    # http://docs.shippable.com/integrations/notifications/email/
    - integrationName: email
      type: email
      on_success: change
      on_failure: always
      on_pull_request: never

    # Sending webhook to notify Shippable pipeline of new image tag available 
    # http://docs.shippable.com/tutorials/pipelines/connectingCiPipelines/
    # UNCOMMENT LINES BELOW THIS AFTER ADDING PIPELINE TO SPOG VIEW
    # - integrationName: trigger-shipdemo-img
    #   type: webhook
    #   payload:
    #     - versionName=$BRANCH.$BUILD_NUMBER
    #   branches:
    #     only:
    #       - master
    #   on_success: always
    #   on_failure: never
    #   on_start: never

